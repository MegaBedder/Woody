<?php

namespace Woody\Components\Timer;

use Woody\Components\Windows\MainWindow;
use Woody\Utils\Geom\Point;
use Woody\Utils\Geom\Dimension;

/**
 * Test class for Timer.
 * Generated by PHPUnit on 2011-11-16 at 21:19:10.
 */
class TimerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Timer
     */
    public $object;

    public $counter = 0;

    public $starttime;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->window = new MainWindow('timer test', new Point(50, 50), new Dimension(300, 200));

        $this->window->create(null);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testStart().
     */
    public function testStart()
    {
        $this->starttime = time();
        $self = $this;
        $this->object = new Timer(function() use ($self)
                        {
                            if(++$self->counter > 3)
                            {
                                $self->window->destroy();
                                $self->assertEquals(4, $self->counter);
                                $self->assertEquals(4, time() - $self->starttime);
                            }
                        }, 1000);

        $this->object->start($this->window);

        $this->window->startEventHandler();
    }

    /**
     * nothing to test here
     */
    public function testRun()
    {
    }

    /**
     * @todo Implement testDestroy().
     */
    public function testDestroy()
    {
        //$this->object->destroy();
    }

    /**
     * @todo Implement testGetID().
     */
    public function testGetID()
    {
        $this->object = new Timer(function(){}, 1000);

        $this->object->start($this->window);

        $this->assertEquals($this->window->getID() + 1, $this->object->getID());

        $this->object->destroy();

        $this->window->destroy();
    }
}

?>
