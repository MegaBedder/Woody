<?php

namespace Woody\Components\Controls;

use Woody\Components\Windows\MainWindow;
use Woody\Utils\Geom\Point;
use Woody\Utils\Geom\Dimension;

/**
 * Test class for EditBox.
 * Generated by PHPUnit on 2011-11-15 at 23:23:15.
 */
class EditBoxTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var EditBox
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->delay = 1000000;

        $this->window = new MainWindow('MyWin2', new Point(50, 50), new Dimension(300, 200));

        $this->window->create(null);

        $this->object = new EditBox('testValue', new \Woody\Utils\Geom\Point(20, 20), new \Woody\Utils\Geom\Dimension(50, 18));

        $this->window->add($this->object);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testGetValue().
     */
    public function testGetValue()
    {
add timer support to use test cases here
timer runs callback, that calls test case internals
        $this->window->startEventHandler();
        $this->assertEquals(' testValue     ', $this->object->getValue());
        usleep($this->delay);
        $this->assertEquals('testValue', $this->object->getValue(TRUE));
        wb_destroy_control($this->window->getControlID());
    }

    /**
     * @todo Implement testSetValue().
     */
    public function testSetValue()
    {

        $this->window->startEventHandler();usleep($this->delay);
        $this->object->setValue('');
        $this->assertEquals('', $this->object->getValue());
usleep($this->delay);
        $this->object->setValue('new Value');
        $this->assertEquals('new Value', $this->object->getValue());
usleep($this->delay);
        $this->object->setValue('12345');
        $this->assertEquals('12345', $this->object->getValue());
    }

    /**
     * @todo Implement testSetReadOnly().
     */
    public function testSetReadOnly() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

?>
