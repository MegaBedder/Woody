<?php

namespace ws\loewe\Woody\Event;

use \ws\loewe\Woody\Components\Windows\MainWindow;
use \ws\loewe\Utils\Geom\Point;
use \ws\loewe\Utils\Geom\Dimension;

/**
 * Test class for WindowCloseEvent.
 * Generated by PHPUnit on 2012-09-04 at 20:57:12.
 */
class WindowCloseEventTest extends \PHPUnit_Framework_TestCase {
  /**
   * @var WindowCloseEvent
   */
  protected $event;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $eventInfo = $this->getMockBuilder('\ws\loewe\Woody\Event\EventInfo')
      ->disableOriginalConstructor()
      ->getMock();
    
    $this->event = new WindowCloseEvent($eventInfo);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
  }

  /**
   * This method tests creating the event.
   *
   * @covers \ws\loewe\Woody\Event\WindowCloseEvent::__construct
   * @covers \ws\loewe\Woody\Event\Event::__construct
   */
  public function testConstruct() {
    $this->assertInstanceOf('\ws\loewe\Woody\Event\WindowCloseEvent', $this->event);
  }

 /**
   * This method tests dispatching the event.
   *
   * @covers \ws\loewe\Woody\Event\WindowCloseEvent::dispatch
   */
  public function testDispatch() {
    $window = new MainWindow('MainWindow', new Point(50, 50), new Dimension(300, 200));
    $window->create();

    $closeListener = $this->getMockBuilder('\ws\loewe\Woody\Event\WindowCloseAdapter')
      ->disableOriginalConstructor()
      ->getMock();

    $closeListener->expects($this->once())->method('windowClosed');
    $window->setWindowCloseListener($closeListener);

    $event = new WindowCloseEvent(new EventInfo($window->getControlID(), IDCLOSE, $window, 0, 0));
    $event->dispatch();

    $window->close();
  }
}