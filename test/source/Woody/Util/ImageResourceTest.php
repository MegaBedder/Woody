<?php

namespace Woody\Util;

use \Utils\Geom\Dimension;

/**
 * Test class for ImageResource.
 * Generated by PHPUnit on 2012-05-02 at 22:01:46.
 */
class ImageResourceTest extends \PHPUnit_Framework_TestCase {
  /**
   * the image resource to test
   *
   * @var ImageResource
   */
  protected $imageResource;

  private $jpgImage = '../../../../data/woody.jpg';

  private $bmpImage = '../../../../data/woody.jpg';

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->jpgImage = realpath(__DIR__.'/'.$this->jpgImage);
    $this->bmpImage = realpath(__DIR__.'/'.$this->bmpImage);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {

  }

  /**
   * This method tests creating the image resource.
   *
   * @covers \Woody\Util\ImageResource::__construct
   */
  public function testConstruct() {
    $this->imageResource = ImageResource::createFromFile($this->jpgImage);
    $expected = getimagesize($this->jpgImage);
    $actual   = \PHPUnit_Framework_Assert::readAttribute($this->imageResource, 'dimension');
    $this->assertEquals($expected[0], $actual->width);
    $this->assertEquals($expected[1], $actual->height);


    $expected = new Dimension(200, 100);
    $this->imageResource = ImageResource::createFromFile($this->jpgImage, $expected);
    $actual = \PHPUnit_Framework_Assert::readAttribute($this->imageResource, 'dimension');
    $this->assertEquals($expected->width, $actual->width);
    $this->assertEquals($expected->height, $actual->height);
  }

  /**
   * This method tests getting the resource for a jpg-image.
   *
   * @covers \Woody\Util\ImageResource::getResource
   * @covers \Woody\Util\ImageResource::isJpeg
   */
  public function testGetBitmapJpg() {
    $this->imageResource = ImageResource::createFromFile($this->jpgImage);

    $this->assertNotNull($this->imageResource->getResource());
  }

  /**
   * This method tests getting the resource for a bitmap-image.
   *
   * @covers \Woody\Util\ImageResource::getResource
   * @covers \Woody\Util\ImageResource::isJpeg
   */
  public function testGetBitmapBmp() {
    $this->imageResource = ImageResource::createFromFile($this->bmpImage);

    $this->assertNotNull($this->imageResource->getResource());
  }
}