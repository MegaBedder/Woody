<?php

namespace Woody\Components\Controls;

use \Woody\Model\TreeNodeTreeModel;
use \Woody\App\TestApplication;
use \Woody\Components\Timer\Timer;
use \Utils\Geom\Point;
use \Utils\Geom\Dimension;

/**
 * Test class for TreeView.
 * Generated by PHPUnit on 2011-12-18 at 19:31:01.
 */
class TreeViewTest extends \PHPUnit_Framework_TestCase {

    /**
     * the tree view to test
     *
     * @var \Woody\Components\Controls\Treeview
     */
    private $treeView       = null;

    /**
     * the test application
     *
     * @var \Woody\App\TestApplication
     */
    private $application    = false;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->application  = new TestApplication();

        $this->treeView     = new TreeView(new Point(20, 20), new Dimension(260, 130));

        $this->application->getWindow()->add($this->treeView);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers \Woody\Components\Controls\TreeView::getSelectedItem
     * @covers \Woody\Components\Controls\TreeView::setSelectedItem
     */
    public function testGetSetSelectedItem() {
        $this->timer = new Timer(function() {
                            $model = $this->getMockBuilder('\Woody\Model\TreeNodeTreeModel')
                                        ->disableOriginalConstructor()
                                        ->getMock();
                            $model->expects($this->any())
                                ->method('getChildCount')
                                ->will($this->onConsecutiveCalls(2, 0, 0, 0));

                            $model->expects($this->any())
                                ->method('getChild')
                                ->will($this->returnValueMap(array(array(0, 'A'), array(1, 'B'))));
make tree model mock manually - otherwise too complex
move ItreeModel and TreeModel to utils
extend WoodyTreeModel of it, or wrap it, then make new MockTreeModel class locally, here
                            $this->treeView->setModel($model);

                            $this->timer->destroy();
                            $this->application->stop();
                        }, $this->application->getWindow(), 100);

        $this->timer->start($this->application->getWindow());

        $this->application->start();
    }

    /**
     * @covers \Woody\Components\Controls\TreeView::
     * @todo Implement testGetParentItem().
     */
    public function AtestGetParentItem() {
        $this->timer = new Timer(function() {

                            $this->timer->destroy();
                            $this->application->stop();
                        }, $this->application->getWindow(), 100);

        $this->timer->start($this->application->getWindow());
    }

    /**
     * @covers \Woody\Components\Controls\TreeView::getModel
     * @covers \Woody\Components\Controls\TreeView::setModel
     * @todo Implement testGetModel().
     */
    public function DonetestGetSetModel() {
        $this->timer = new Timer(function() {
                            $this->assertNull($this->treeView->getModel());

                            $model = $this->getMockBuilder('\Woody\Model\TreeNodeTreeModel')
                                        ->disableOriginalConstructor()
                                        ->getMock();

                            $this->treeView->setModel($model);
                            $this->assertNotNull($this->treeView->getModel());
                            $this->assertSame($model, $this->treeView->getModel());

                            $this->timer->destroy();
                            $this->application->stop();
                        }, $this->application->getWindow(), 100);

        $this->timer->start($this->application->getWindow());

        $this->application->start();
    }

    /**
     * @covers \Woody\Components\Controls\TreeView::
     * @todo Implement testUpdate().
     */
    public function AtestUpdate() {
        $this->timer = new Timer(function() {

                            $this->timer->destroy();
                            $this->application->stop();
                        }, $this->application->getWindow(), 100);

        $this->timer->start($this->application->getWindow());

        $this->application->start();
    }
}